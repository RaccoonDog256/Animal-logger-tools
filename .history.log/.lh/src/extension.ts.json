{
    "sourceFile": "src/extension.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1709634555763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709634570549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,27 @@\n-import * as vscode from \"vscode\";\n+import * as vscode from 'vscode';\n \n export function activate(context: vscode.ExtensionContext) {\n-  console.log(\n-    'Congratulations, your extension \"console-kawaii\" is now active!'\n-  );\n+    console.log('Congratulations, your extension \"console-kawaii\" is now active!');\n \n-  let disposable = vscode.commands.registerCommand(\n-    \"console-kawaii.helloWorld\",\n-    () => {\n-      // ランダムな絵文字を生成してログに出力する関数\n-      const randomEmojis = () => {\n-        const emojis = [\n-          \"😄\",\n-          \"🐱‍👤\",\n-          \"🍀\",\n-          \"🌈\",\n-          \"⭐\",\n-          \"🎉\",\n-          \"🐾\",\n-          \"🍓\",\n-          \"🌟\",\n-          \"💫\",\n-        ];\n-        let randomEmojis = \"\";\n-        for (let i = 0; i < 6; i++) {\n-          randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n-        }\n-        return randomEmojis;\n-      };\n+    let disposable = vscode.commands.registerCommand('console-kawaii.helloWorld', () => {\n+        // ランダムな絵文字を生成してログに出力する関数\n+        const randomEmojis = () => {\n+            const emojis = ['😄', '🐱‍👤', '🍀', '🌈', '⭐', '🎉', '🐾', '🍓', '🌟', '💫'];\n+            let randomEmojis = '';\n+            for (let i = 0; i < 6; i++) {\n+                randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n+            }\n+            return randomEmojis;\n+        };\n \n-      // 生成したランダムな絵文字をコンソールに出力\n-      console.log(randomEmojis());\n+        // 生成したランダムな絵文字をコンソールに出力\n+        console.log(randomEmojis());\n \n-      // ユーザーに通知するメッセージ\n-      vscode.window.showInformationMessage(\n-        \"Hello World from console-kawaii with emojis!\"\n-      );\n-    }\n-  );\n+        // ユーザーに通知するメッセージ\n+        vscode.window.showInformationMessage('Hello World from console-kawaii with emojis!');\n+    });\n \n-  context.subscriptions.push(disposable);\n+    context.subscriptions.push(disposable);\n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709634658709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,45 @@\n-import * as vscode from 'vscode';\n+import * as vscode from \"vscode\";\n \n export function activate(context: vscode.ExtensionContext) {\n-    console.log('Congratulations, your extension \"console-kawaii\" is now active!');\n+  console.log(\n+    'Congratulations, your extension \"console-kawaii\" is now active!'\n+  );\n \n-    let disposable = vscode.commands.registerCommand('console-kawaii.helloWorld', () => {\n-        // ランダムな絵文字を生成してログに出力する関数\n-        const randomEmojis = () => {\n-            const emojis = ['😄', '🐱‍👤', '🍀', '🌈', '⭐', '🎉', '🐾', '🍓', '🌟', '💫'];\n-            let randomEmojis = '';\n-            for (let i = 0; i < 6; i++) {\n-                randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n-            }\n-            return randomEmojis;\n-        };\n+  let disposable = vscode.commands.registerCommand(\n+    \"console-kawaii.helloWorld\",\n+    () => {\n+      // ランダムな絵文字を生成してログに出力する関数\n+      const randomEmojis = () => {\n+        const emojis = [\n+          \"😄\",\n+          \"🐱‍👤\",\n+          \"🍀\",\n+          \"🌈\",\n+          \"⭐\",\n+          \"🎉\",\n+          \"🐾\",\n+          \"🍓\",\n+          \"🌟\",\n+          \"💫\",\n+        ];\n+        let randomEmojis = \"\";\n+        for (let i = 0; i < 6; i++) {\n+          randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n+        }\n+        return randomEmojis;\n+      };\n \n-        // 生成したランダムな絵文字をコンソールに出力\n-        console.log(randomEmojis());\n+      // 生成したランダムな絵文字をコンソールに出力\n+      console.log(randomEmojis());\n \n-        // ユーザーに通知するメッセージ\n-        vscode.window.showInformationMessage('Hello World from console-kawaii with emojis!');\n-    });\n+      // ユーザーに通知するメッセージ\n+      vscode.window.showInformationMessage(\n+        \"Hello World from console-kawaii with emojis!\"\n+      );\n+    }\n+  );\n \n-    context.subscriptions.push(disposable);\n+  context.subscriptions.push(disposable);\n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709634945794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,23 @@\n import * as vscode from \"vscode\";\n \n export function activate(context: vscode.ExtensionContext) {\n-  console.log(\n-    'Congratulations, your extension \"console-kawaii\" is now active!'\n-  );\n+  context.subscriptions.push(\n+    vscode.commands.registerCommand(\"vscode-omikuji.omikuji\", () => {\n+      const omikujiCandidates = [\n+        \"大吉\",\n+        \"吉\",\n+        \"中吉\",\n+        \"小吉\",\n+        \"末吉\",\n+        \"凶\",\n+        \"大凶\",\n+      ];\n+      const omikujiResult =\n+        omikujiCandidates[Math.floor(Math.random() * omikujiCandidates.length)];\n \n-  let disposable = vscode.commands.registerCommand(\n-    \"console-kawaii.helloWorld\",\n-    () => {\n-      // ランダムな絵文字を生成してログに出力する関数\n-      const randomEmojis = () => {\n-        const emojis = [\n-          \"😄\",\n-          \"🐱‍👤\",\n-          \"🍀\",\n-          \"🌈\",\n-          \"⭐\",\n-          \"🎉\",\n-          \"🐾\",\n-          \"🍓\",\n-          \"🌟\",\n-          \"💫\",\n-        ];\n-        let randomEmojis = \"\";\n-        for (let i = 0; i < 6; i++) {\n-          randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n-        }\n-        return randomEmojis;\n-      };\n-\n-      // 生成したランダムな絵文字をコンソールに出力\n-      console.log(randomEmojis());\n-\n-      // ユーザーに通知するメッセージ\n       vscode.window.showInformationMessage(\n-        \"Hello World from console-kawaii with emojis!\"\n+        `あなたの運勢は${omikujiResult}です！`\n       );\n-    }\n+    })\n   );\n-\n-  context.subscriptions.push(disposable);\n }\n-\n-export function deactivate() {}\n"
                },
                {
                    "date": 1709634982544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,45 @@\n import * as vscode from \"vscode\";\n \n export function activate(context: vscode.ExtensionContext) {\n-  context.subscriptions.push(\n-    vscode.commands.registerCommand(\"vscode-omikuji.omikuji\", () => {\n-      const omikujiCandidates = [\n-        \"大吉\",\n-        \"吉\",\n-        \"中吉\",\n-        \"小吉\",\n-        \"末吉\",\n-        \"凶\",\n-        \"大凶\",\n-      ];\n-      const omikujiResult =\n-        omikujiCandidates[Math.floor(Math.random() * omikujiCandidates.length)];\n+  console.log(\n+    'Congratulations, your extension \"console-kawaii\" is now active!'\n+  );\n \n+  let disposable = vscode.commands.registerCommand(\n+    \"console-kawaii.helloWorld\",\n+    () => {\n+      // ランダムな絵文字を生成してログに出力する関数\n+      const randomEmojis = () => {\n+        const emojis = [\n+          \"😄\",\n+          \"🐱‍👤\",\n+          \"🍀\",\n+          \"🌈\",\n+          \"⭐\",\n+          \"🎉\",\n+          \"🐾\",\n+          \"🍓\",\n+          \"🌟\",\n+          \"💫\",\n+        ];\n+        let randomEmojis = \"\";\n+        for (let i = 0; i < 6; i++) {\n+          randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n+        }\n+        return randomEmojis;\n+      };\n+\n+      // 生成したランダムな絵文字をコンソールに出力\n+      console.log(randomEmojis());\n+\n+      // ユーザーに通知するメッセージ\n       vscode.window.showInformationMessage(\n-        `あなたの運勢は${omikujiResult}です！`\n+        \"Hello World from console-kawaii with emojis!\"\n       );\n-    })\n+    }\n   );\n+\n+  context.subscriptions.push(disposable);\n }\n+\n+export function deactivate() {}\n"
                },
                {
                    "date": 1709635242386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,36 +7,48 @@\n \n   let disposable = vscode.commands.registerCommand(\n     \"console-kawaii.helloWorld\",\n     () => {\n-      // ランダムな絵文字を生成してログに出力する関数\n-      const randomEmojis = () => {\n+      const editor = vscode.window.activeTextEditor;\n+      if (!editor) {\n+        vscode.window.showInformationMessage(\"No editor is active\");\n+        return;\n+      }\n+\n+      // ランダムな絵文字を生成する関数\n+      const randomEmoji = () => {\n         const emojis = [\n-          \"😄\",\n-          \"🐱‍👤\",\n-          \"🍀\",\n-          \"🌈\",\n-          \"⭐\",\n-          \"🎉\",\n-          \"🐾\",\n-          \"🍓\",\n-          \"🌟\",\n-          \"💫\",\n+          \"🐱\",\n+          \"🐶\",\n+          \"🐭\",\n+          \"🐹\",\n+          \"🐰\",\n+          \"🦊\",\n+          \"🐻\",\n+          \"🐼\",\n+          \"🐨\",\n+          \"🐯\",\n+          \"🦁\",\n+          \"🐮\",\n+          \"🐷\",\n+          \"🐸\",\n+          \"🐵\",\n         ];\n-        let randomEmojis = \"\";\n-        for (let i = 0; i < 6; i++) {\n-          randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n-        }\n-        return randomEmojis;\n+        return emojis[Math.floor(Math.random() * emojis.length)];\n       };\n \n-      // 生成したランダムな絵文字をコンソールに出力\n-      console.log(randomEmojis());\n+      // カーソル位置にテキストを挿入\n+      const insertText = (text: string) => {\n+        editor.edit((editBuilder) => {\n+          editor.selections.forEach((sel) => {\n+            editBuilder.insert(sel.start, text);\n+          });\n+        });\n+      };\n \n-      // ユーザーに通知するメッセージ\n-      vscode.window.showInformationMessage(\n-        \"Hello World from console-kawaii with emojis!\"\n-      );\n+      // ランダムな絵文字を挿入するテキスト\n+      const textToInsert = `console.log('${randomEmoji()}')`;\n+      insertText(textToInsert);\n     }\n   );\n \n   context.subscriptions.push(disposable);\n"
                },
                {
                    "date": 1709635438994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     'Congratulations, your extension \"console-kawaii\" is now active!'\n   );\n \n   let disposable = vscode.commands.registerCommand(\n-    \"console-kawaii.helloWorld\",\n+    \"console-kawaii.\",\n     () => {\n       const editor = vscode.window.activeTextEditor;\n       if (!editor) {\n         vscode.window.showInformationMessage(\"No editor is active\");\n"
                },
                {
                    "date": 1709635446043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,53 +4,50 @@\n   console.log(\n     'Congratulations, your extension \"console-kawaii\" is now active!'\n   );\n \n-  let disposable = vscode.commands.registerCommand(\n-    \"console-kawaii.\",\n-    () => {\n-      const editor = vscode.window.activeTextEditor;\n-      if (!editor) {\n-        vscode.window.showInformationMessage(\"No editor is active\");\n-        return;\n-      }\n+  let disposable = vscode.commands.registerCommand(\"console-kawaii.con\", () => {\n+    const editor = vscode.window.activeTextEditor;\n+    if (!editor) {\n+      vscode.window.showInformationMessage(\"No editor is active\");\n+      return;\n+    }\n \n-      // ランダムな絵文字を生成する関数\n-      const randomEmoji = () => {\n-        const emojis = [\n-          \"🐱\",\n-          \"🐶\",\n-          \"🐭\",\n-          \"🐹\",\n-          \"🐰\",\n-          \"🦊\",\n-          \"🐻\",\n-          \"🐼\",\n-          \"🐨\",\n-          \"🐯\",\n-          \"🦁\",\n-          \"🐮\",\n-          \"🐷\",\n-          \"🐸\",\n-          \"🐵\",\n-        ];\n-        return emojis[Math.floor(Math.random() * emojis.length)];\n-      };\n+    // ランダムな絵文字を生成する関数\n+    const randomEmoji = () => {\n+      const emojis = [\n+        \"🐱\",\n+        \"🐶\",\n+        \"🐭\",\n+        \"🐹\",\n+        \"🐰\",\n+        \"🦊\",\n+        \"🐻\",\n+        \"🐼\",\n+        \"🐨\",\n+        \"🐯\",\n+        \"🦁\",\n+        \"🐮\",\n+        \"🐷\",\n+        \"🐸\",\n+        \"🐵\",\n+      ];\n+      return emojis[Math.floor(Math.random() * emojis.length)];\n+    };\n \n-      // カーソル位置にテキストを挿入\n-      const insertText = (text: string) => {\n-        editor.edit((editBuilder) => {\n-          editor.selections.forEach((sel) => {\n-            editBuilder.insert(sel.start, text);\n-          });\n+    // カーソル位置にテキストを挿入\n+    const insertText = (text: string) => {\n+      editor.edit((editBuilder) => {\n+        editor.selections.forEach((sel) => {\n+          editBuilder.insert(sel.start, text);\n         });\n-      };\n+      });\n+    };\n \n-      // ランダムな絵文字を挿入するテキスト\n-      const textToInsert = `console.log('${randomEmoji()}')`;\n-      insertText(textToInsert);\n-    }\n-  );\n+    // ランダムな絵文字を挿入するテキスト\n+    const textToInsert = `console.log('${randomEmoji()}')`;\n+    insertText(textToInsert);\n+  });\n \n   context.subscriptions.push(disposable);\n }\n \n"
                },
                {
                    "date": 1709635496491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,13 @@\n         \"🐷\",\n         \"🐸\",\n         \"🐵\",\n       ];\n-      return emojis[Math.floor(Math.random() * emojis.length)];\n+      let randomEmojis = \"\";\n+      for (let i = 0; i < 20; i++) {\n+        randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n+      }\n+      return randomEmojis;\n     };\n \n     // カーソル位置にテキストを挿入\n     const insertText = (text: string) => {\n"
                },
                {
                    "date": 1709635828868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,7 +52,35 @@\n     insertText(textToInsert);\n   });\n \n   context.subscriptions.push(disposable);\n+\n+  let insertLogNextTab = false; // 次のTabキー押下でconsole.log()を挿入するかどうかのフラグ\n+\n+  let disposableInsertLog = vscode.commands.registerCommand(\n+    \"console-kawaii.insertLog\",\n+    () => {\n+      insertLogNextTab = true; // コマンド実行時にフラグをtrueに設定\n+      setTimeout(() => (insertLogNextTab = false), 10000); // 10秒後にフラグを自動的にfalseに戻す（オプション）\n+    }\n+  );\n+\n+  context.subscriptions.push(disposableInsertLog);\n+\n+  // キーボードショートカット（Tab）に対応するコマンドを登録\n+  let disposableTab = vscode.commands.registerCommand(\"type\", (args) => {\n+    if (args.text === \"\\t\" && insertLogNextTab) {\n+      const editor = vscode.window.activeTextEditor;\n+      if (editor) {\n+        const snippet = new vscode.SnippetString(\"console.log($1);\\n$0\");\n+        editor.insertSnippet(snippet);\n+        insertLogNextTab = false; // 挿入後にフラグをリセット\n+      }\n+    } else {\n+      vscode.commands.executeCommand(\"default:type\", args);\n+    }\n+  });\n+\n+  context.subscriptions.push(disposableTab);\n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709636189331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,36 +51,8 @@\n     const textToInsert = `console.log('${randomEmoji()}')`;\n     insertText(textToInsert);\n   });\n \n-  context.subscriptions.push(disposable);\n-\n-  let insertLogNextTab = false; // 次のTabキー押下でconsole.log()を挿入するかどうかのフラグ\n-\n-  let disposableInsertLog = vscode.commands.registerCommand(\n-    \"console-kawaii.insertLog\",\n-    () => {\n-      insertLogNextTab = true; // コマンド実行時にフラグをtrueに設定\n-      setTimeout(() => (insertLogNextTab = false), 10000); // 10秒後にフラグを自動的にfalseに戻す（オプション）\n-    }\n-  );\n-\n-  context.subscriptions.push(disposableInsertLog);\n-\n-  // キーボードショートカット（Tab）に対応するコマンドを登録\n-  let disposableTab = vscode.commands.registerCommand(\"type\", (args) => {\n-    if (args.text === \"\\t\" && insertLogNextTab) {\n-      const editor = vscode.window.activeTextEditor;\n-      if (editor) {\n-        const snippet = new vscode.SnippetString(\"console.log($1);\\n$0\");\n-        editor.insertSnippet(snippet);\n-        insertLogNextTab = false; // 挿入後にフラグをリセット\n-      }\n-    } else {\n-      vscode.commands.executeCommand(\"default:type\", args);\n-    }\n-  });\n-\n-  context.subscriptions.push(disposableTab);\n+  \n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709636358383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,22 @@\n     const textToInsert = `console.log('${randomEmoji()}')`;\n     insertText(textToInsert);\n   });\n \n-  \n+  let disposable = vscode.commands.registerCommand(\n+    \"console-kawaii.insertSole\",\n+    () => {\n+      const editor = vscode.window.activeTextEditor;\n+      if (!editor) {\n+        vscode.window.showInformationMessage(\"No active editor\");\n+        return;\n+      }\n+\n+      const snippet = new vscode.SnippetString(\"console.log($1)\");\n+      editor.insertSnippet(snippet, editor.selection.active);\n+    }\n+  );\n+\n+  context.subscriptions.push(disposable);\n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709636364666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,23 +50,9 @@\n     // ランダムな絵文字を挿入するテキスト\n     const textToInsert = `console.log('${randomEmoji()}')`;\n     insertText(textToInsert);\n   });\n-\n-  let disposable = vscode.commands.registerCommand(\n-    \"console-kawaii.insertSole\",\n-    () => {\n-      const editor = vscode.window.activeTextEditor;\n-      if (!editor) {\n-        vscode.window.showInformationMessage(\"No active editor\");\n-        return;\n-      }\n-\n-      const snippet = new vscode.SnippetString(\"console.log($1)\");\n-      editor.insertSnippet(snippet, editor.selection.active);\n-    }\n-  );\n-\n-  context.subscriptions.push(disposable);\n+\t\n+\t\n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709636370525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+import * as vscode from \"vscode\";\n+\n+export function activate(context: vscode.ExtensionContext) {\n+  console.log(\n+    'Congratulations, your extension \"console-kawaii\" is now active!'\n+  );\n+\n+  let disposable = vscode.commands.registerCommand(\"console-kawaii.con\", () => {\n+    const editor = vscode.window.activeTextEditor;\n+    if (!editor) {\n+      vscode.window.showInformationMessage(\"No editor is active\");\n+      return;\n+    }\n+\n+    // ランダムな絵文字を生成する関数\n+    const randomEmoji = () => {\n+      const emojis = [\n+        \"🐱\",\n+        \"🐶\",\n+        \"🐭\",\n+        \"🐹\",\n+        \"🐰\",\n+        \"🦊\",\n+        \"🐻\",\n+        \"🐼\",\n+        \"🐨\",\n+        \"🐯\",\n+        \"🦁\",\n+        \"🐮\",\n+        \"🐷\",\n+        \"🐸\",\n+        \"🐵\",\n+      ];\n+      let randomEmojis = \"\";\n+      for (let i = 0; i < 20; i++) {\n+        randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n+      }\n+      return randomEmojis;\n+    };\n+\n+    // カーソル位置にテキストを挿入\n+    const insertText = (text: string) => {\n+      editor.edit((editBuilder) => {\n+        editor.selections.forEach((sel) => {\n+          editBuilder.insert(sel.start, text);\n+        });\n+      });\n+    };\n+\n+    // ランダムな絵文字を挿入するテキスト\n+    const textToInsert = `console.log('${randomEmoji()}')`;\n+    insertText(textToInsert);\n+  });\n+\n+  let disposable = vscode.commands.registerCommand(\n+    \"console-kawaii.insertSole\",\n+    () => {\n+      const editor = vscode.window.activeTextEditor;\n+      if (!editor) {\n+        vscode.window.showInformationMessage(\"No active editor\");\n+        return;\n+      }\n+\n+      const snippet = new vscode.SnippetString(\"console.log($1)\");\n+      editor.insertSnippet(snippet, editor.selection.active);\n+    }\n+  );\n+\n+  context.subscriptions.push(disposable);\n+}\n+\n+export function deactivate() {}\n"
                },
                {
                    "date": 1709636380713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,7 @@\n     // ランダムな絵文字を挿入するテキスト\n     const textToInsert = `console.log('${randomEmoji()}')`;\n     insertText(textToInsert);\n   });\n-\t\n-  \n }\n \n export function deactivate() {}\n"
                },
                {
                    "date": 1709636896866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,8 @@\n     };\n \n     // インデントをそろえる\n \n-\n     // カーソル位置にテキストを挿入\n     const insertText = (text: string) => {\n       editor.edit((editBuilder) => {\n         editor.selections.forEach((sel) => {\n"
                }
            ],
            "date": 1709634555763,
            "name": "Commit-0",
            "content": "import * as vscode from \"vscode\";\n\nexport function activate(context: vscode.ExtensionContext) {\n  console.log(\n    'Congratulations, your extension \"console-kawaii\" is now active!'\n  );\n\n  let disposable = vscode.commands.registerCommand(\n    \"console-kawaii.helloWorld\",\n    () => {\n      // ランダムな絵文字を生成してログに出力する関数\n      const randomEmojis = () => {\n        const emojis = [\n          \"😄\",\n          \"🐱‍👤\",\n          \"🍀\",\n          \"🌈\",\n          \"⭐\",\n          \"🎉\",\n          \"🐾\",\n          \"🍓\",\n          \"🌟\",\n          \"💫\",\n        ];\n        let randomEmojis = \"\";\n        for (let i = 0; i < 6; i++) {\n          randomEmojis += emojis[Math.floor(Math.random() * emojis.length)];\n        }\n        return randomEmojis;\n      };\n\n      // 生成したランダムな絵文字をコンソールに出力\n      console.log(randomEmojis());\n\n      // ユーザーに通知するメッセージ\n      vscode.window.showInformationMessage(\n        \"Hello World from console-kawaii with emojis!\"\n      );\n    }\n  );\n\n  context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n"
        }
    ]
}